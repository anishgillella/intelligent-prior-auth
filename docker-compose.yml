services:
  backend:
    build: .
    container_name: develop_health_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/develop_health_mvp
      - REDIS_URL=redis://redis:6379/0
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./app:/app/app
      - ./mock_data:/app/mock_data
      - ./chroma_db:/app/chroma_db
    restart: unless-stopped
    networks:
      - develop_health_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: develop_health_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:8000
    restart: unless-stopped
    networks:
      - develop_health_network

  postgres:
    image: postgres:16-alpine
    container_name: develop_health_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: develop_health_mvp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - develop_health_network

  redis:
    image: redis:7-alpine
    container_name: develop_health_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - develop_health_network

  celery_worker:
    build: .
    container_name: develop_health_celery
    command: celery -A app.core.celery_app worker --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/develop_health_mvp
      - REDIS_URL=redis://redis:6379/0
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    volumes:
      - ./app:/app/app
      - ./mock_data:/app/mock_data
    restart: unless-stopped
    networks:
      - develop_health_network

volumes:
  postgres_data:
  redis_data:

networks:
  develop_health_network:
    driver: bridge

